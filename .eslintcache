[{"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\index.js":"1","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\reportWebVitals.js":"2","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\App.js":"3","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\Routes.js":"4","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Login\\index.js":"5","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Main\\index.js":"6","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Newticket\\index.js":"7","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\services\\api.js":"8","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\index.js":"9","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\ticketparam.js":"10","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\Ticketparam.js":"11","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Changeticket\\index.js":"12","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Form.js":"13","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Contextmenu.js":"14","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Topbar.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":209,"mtime":1611415139607,"results":"19","hashOfConfig":"17"},{"size":797,"mtime":1611948784374,"results":"20","hashOfConfig":"17"},{"size":2556,"mtime":1611853426314,"results":"21","hashOfConfig":"17"},{"size":10080,"mtime":1611903695673,"results":"22","hashOfConfig":"17"},{"size":23066,"mtime":1611947444528,"results":"23","hashOfConfig":"17"},{"size":140,"mtime":1611853423274,"results":"24","hashOfConfig":"17"},{"size":9332,"mtime":1611948713199,"results":"25","hashOfConfig":"17"},{"size":700,"mtime":1611908336977,"results":"26","hashOfConfig":"17"},{"size":700,"mtime":1611967237678,"results":"27","hashOfConfig":"17"},{"size":4954,"mtime":1611968101597,"results":"28","hashOfConfig":"17"},{"size":13014,"mtime":1611967929085,"results":"29","hashOfConfig":"17"},{"size":1510,"mtime":1611965551786,"results":"30","hashOfConfig":"17"},{"size":565,"mtime":1611965768421,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16mam37",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\index.js",[],["67","68"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\reportWebVitals.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\App.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\Routes.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Login\\index.js",["69","70","71","72"],"import React , { useState, useEffect } from 'react';\r\n\r\nimport logoLoupen from '../../assets/images/logo-Loupen.png';\r\nimport logoFreshdesk from '../../assets/images/logo-FreshdeskFull.svg';\r\nimport './styles.css';\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nexport default function Login(){\r\n\r\n    const history = useHistory();\r\n    const [emailLogin, setemail] = useState(\"\");\r\n    const [senha, setsenha] = useState(\"\");\r\n\r\n    async function makeLogin() {\r\n        console.log({emailLogin, senha});\r\n        try {\r\n            var auth = {\r\n                username: emailLogin,\r\n                password: senha\r\n            }\r\n            const resultLogin = await api.get('tickets', {\r\n                auth\r\n            }).then( response => {\r\n                    if(response.status == 200){\r\n                        localStorage.setItem('authLogin', auth.username);\r\n                        localStorage.setItem('authPass', auth.password);\r\n                        history.push('/home');\r\n                    }\r\n                }\r\n            )\r\n            \r\n        \r\n        } catch (err) {\r\n            alert('Erro ao cadastrar caso, tente novamente.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n \r\n\r\n    return(\r\n        <div className=\"containerPage\">\r\n            <div className=\"pageLogin\">  \r\n                <div className=\"boxLogos\">\r\n                    <div className=\"boxImage\">\r\n                        <img src={ logoLoupen } className=\"logoLoupenLogin\" alt=\"Loupen\"/> \r\n                    </div>\r\n                    <div className=\"boxImage\">\r\n                        <img src={ logoFreshdesk } className=\"logoFreshdesklogin\" alt=\"Fresshdesk\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"boxInputsLogin\">\r\n                    <div className=\"boxInput\">\r\n                        <input value = {emailLogin} onChange={ e=>setemail(e.target.value)} type=\"email\" placeholder=\"E-mail\" className=\"inputEmailLogin inputLogin\"/>\r\n                    </div>\r\n                    <div className=\"boxInput\">\r\n                        <input value={senha} onChange={ e=>setsenha(e.target.value)} type=\"password\" placeholder=\"Senha\" className=\"inputSenhaLogin inputLogin\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"boxButton\">\r\n                    <button type=\"submit\" className=\"buttonEnviar\" onClick={makeLogin} >Entrar</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Main\\index.js",["73","74"],"import './styles.css';\r\n\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport React , { useState, useEffect } from 'react';\r\n\r\nimport iconeLoupen from '../../assets/images/icone-Loupen.png';\r\nimport iconeFreshdesk from '../../assets/images/logo-Freshdesk.png';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Main(){\r\n    const history = useHistory();\r\n\r\n    const [ticketList, setTicketList] = useState([]);\r\n\r\n    let authLogin = localStorage.getItem('authLogin');\r\n    let authPass = localStorage.getItem('authPass');\r\n    var priorityDict = [\"\", \"Baixa\", \"Media\", \"Alta\", \"Urgente\"];\r\n    var priorityStyleDict = [\"\", \"lowPriority\", \"mediumPriority\", \"highPriority\", \"urgentPriority\"];\r\n    var statusDict = {\r\n        2: \"Aberto\",\r\n        3: \"Pendente\",\r\n        4: \"Resolvido\",\r\n        5: \"Fechado\",\r\n        18: \"Teste\",\r\n        23: \"EM DESENV\"\r\n    }\r\n\r\n    function handleLogout(){\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n    });\r\n    useEffect(()=>{\r\n        // carrega os ultimos tickets registrados\r\n        if(ticketList.length == 0){\r\n            console.log(\"carregou\")\r\n            api.get('tickets?per_page=10&page=1', {\r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(async response => {\r\n\r\n                let ticketsResp = response.data;\r\n                // busca para cada tiket o nome do usuário queo registrou e adiciona \r\n                // a informação aos dados do ticket, junto com a url de um icone de perfil\r\n                // os substituindo em requester_id e responder_id\r\n                // já que estes campos não são usados na visualização inicial\r\n                for(let i = 0; i < ticketsResp.length; i++){\r\n                    let requester = ticketsResp[i].requester_id;\r\n                    let requesterResponse;\r\n                    try{\r\n                        requesterResponse = await api.get('contacts/'+requester, {  \r\n                            \"auth\": {\r\n                                \"username\" : authLogin,\r\n                                \"password\" : authPass\r\n                            }\r\n                        })\r\n                    }catch(err){\r\n                        requesterResponse = null;\r\n                    }\r\n                    // existem usuarios quepor algum motivo não possuem nome cadastrado\r\n                    // nesse caso será exibido apenas o nome \"RequesterName\"\r\n                    let nameUserC = requesterResponse == null? \"RequesterName\" : requesterResponse.data.name.split('@')[0].split(' ')[0];\r\n\r\n                    ticketsResp[i].requester_id = \"https://ui-avatars.com/api/?name=\"+nameUserC+\"&size=128&background=random\";\r\n                    ticketsResp[i].responder_id = nameUserC;\r\n                    console.log(ticketsResp[i])\r\n                }\r\n                // atualiza os tickets na lista para serem visualizados \r\n                setTicketList(ticketsResp);\r\n            });\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <input id=\"menu-hamburguer\" type=\"checkbox\" className=\"inputHamburguer\"/>\r\n            <label htmlFor=\"menu-hamburguer\">\r\n                <div className=\"menu\">\r\n                    <span className=\"hamburguer\"></span>\r\n                </div>\r\n            </label>\r\n            <div className=\"contextMenu\">\r\n                <div className=\"conatinerContext\">\r\n                    <div className=\"topBarContext\">\r\n                        <div className=\"topBarContainer\">\r\n                            <img src={ iconeLoupen } alt=\"userImage\" className=\"imageIconContext\"/>\r\n                            <div className=\"textUserName\">\r\n                                NomeUsuario\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=>history.push('/home')}>\r\n                        Listar Tickets\r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=>history.push('/new')}>\r\n                        Novo Ticket\r\n                    </div>\r\n                    <div className=\"contextOptionExit\" onClick={handleLogout}>\r\n                        Sair\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"\">\r\n                    <div>\r\n\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            \r\n            <div className=\"contentContainerMain\">\r\n                <div className=\"topBarContent\">\r\n                    <img src={iconeFreshdesk} alt=\"FreshdeskTaskManager\" className=\"logoFrashdeskTopBar\"/>\r\n                    <div className=\"formContainerInput\">\r\n                        <form action=\"\">\r\n                            <input type=\"search\" placeholder=\"Buscar Ticket\" className=\"inputSearchTopBar\"/>  \r\n                        </form>\r\n                        <div className=\"containerNewTicket\">\r\n                            <Link to=\"/new\" className=\"linkRoute\">\r\n                                <button className=\"buttonNewTicket\" >\r\n                                    <AddBoxIcon className=\"iconNewTicket\"/>\r\n                                    Novo Ticket\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ticketsResult\">\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            // carrega placeHolders enquanto não há dados\r\n                            ticketList.length == 0?\r\n                                <div className=\"\">\r\n                                    <Skeleton variant=\"rect\"  className =\"compSkelethon\" height={118} />\r\n                                    <Skeleton variant=\"rect\" className =\"compSkelethon\"  height={118} />\r\n                                    <Skeleton variant=\"rect\" className =\"compSkelethon\"  height={118} />\r\n                                </div>\r\n                            :\r\n                                ticketList.map(ticket => \r\n                                    <Link to={\"/ticket/\"+ticket.id} className=\"linkRoute\">\r\n                                        <div className=\"ticketCard\">\r\n                                            <div className=\"section1\">\r\n                                                <div className=\"remainingTimeticket1\">\r\n                                                    Prazo para primeira resposta vence em 5 horas\r\n                                                </div>\r\n                                                <div className=\"containerRequesterInformations\">\r\n                                                    <div className=\"containerImageTicket\">\r\n                                                        <img src={ticket.requester_id} alt={ticket.responder_id} />\r\n                                                    </div>\r\n                                                    <div className=\"userNameTicket\">{ticket.responder_id}</div>\r\n                                                </div>\r\n                                                <div className=\"tagsContainer\">\r\n                                                    {\r\n                                                        ticket.tags.map(tag => \r\n                                                            <div className=\"tagTicket\">\r\n                                                                • {tag}\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"section2\">\r\n                                                {ticket.subject}\r\n                                            </div>\r\n                                            <div className=\"section3\">\r\n                                                <div className=\"containerSection\">\r\n                                                    <div className=\"priorityTicket\">\r\n                                                        {priorityDict[ticket.priority]}\r\n                        \r\n                                                        <div className={ \"iconePrioridade \" + priorityStyleDict[ticket.priority]}></div>\r\n                                                    </div>\r\n                                                    <div className=\"sectionDivider\"></div>\r\n                                                    <div className=\"containerStatus\">\r\n                                                        <div className=\"statusTicket\">\r\n                                                            {statusDict[ticket.status]}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"remainingTimeticket2\">\r\n                                                        Prazo para primeira resposta vence em 5 horas\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                        }\r\n                        <Pagination count={10} variant=\"outlined\" shape=\"rounded\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Newticket\\index.js",["75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React , { useState, useEffect } from 'react';\r\n\r\nimport '../Main/styles.css'\r\nimport './styles.css'\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport  draftToHtml  from 'draftjs-to-html';\r\n\r\n// informações obtidas em https://loupendemo.freshdesk.com/api/_/bootstrap/agents_group\r\nimport agentsIds from '../../assets/data/agentsIds.json';\r\n\r\nimport api from '../../services/api';\r\n\r\n\r\nimport iconeLoupen from '../../assets/images/icone-Loupen.png';\r\nimport iconeFreshdesk from '../../assets/images/logo-Freshdesk.png';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nexport default function Newticket(){\r\n     // dados de acesso à API\r\n     let authLogin = localStorage.getItem('authLogin');\r\n     let authPass = localStorage.getItem('authPass');\r\n\r\n    // campos do formulario\r\n    const [email, setemail] = useState(null);\r\n    const [cc_emails, setcc_emails] = useState(null);\r\n    const [type, settype] = useState(null);\r\n    const [cf_tipo_do_ticket264377, setcf_tipo_do_ticket264377] = useState(null);\r\n    const [cf_usurio331473, setcf_usurio331473] = useState(null);\r\n    const [cf_reclame_aqui_id, setcf_reclame_aqui_id] = useState(null);\r\n    const [cf_source_external_id, setcf_source_external_id] = useState(null);\r\n    const [cf_empresa_recebendo_a_reclamao, setcf_empresa_recebendo_a_reclamao] = useState(null);\r\n    const [cf_cliente_voltou_a_fazer_negocio, setcf_cliente_voltou_a_fazer_negocio] = useState(null);\r\n    const [cf_quantidade_de_comentarios_de_outros_usuarios, setcf_quantidade_de_comentarios_de_outros_usuarios] = useState(null);\r\n    const [cf_ticket_congelado_mais_de_30_dias_sem_resposta, setcf_ticket_congelado_mais_de_30_dias_sem_resposta] = useState(null);\r\n    const [cf_sentimento_do_consumidor, setcf_sentimento_do_consumidor] = useState(null);\r\n    const [cf_motivo_da_reclamacao, setcf_motivo_da_reclamacao] = useState(null);\r\n    const [cf_status_do_ticket_no_reclame_aqui, setcf_status_do_ticket_no_reclame_aqui] = useState(null);\r\n    const [cf_solicitacao_para_o_cliente_avaliar_o_ticket, setcf_solicitacao_para_o_cliente_avaliar_o_ticket] = useState(null);\r\n    const [cf_existe_um_pedido_de_moderacao, setcf_existe_um_pedido_de_moderacao] = useState(null);\r\n    const [cf_quantidade_de_solicitacoes_de_moderacao, setcf_quantidade_de_solicitacoes_de_moderacao] = useState(null);\r\n    const [cf_tipo_de_resposta, setcf_tipo_de_resposta] = useState(null);\r\n    const [subject, setsubject] = useState(null);\r\n    const [status, setstatus] = useState(2);\r\n    const [source, setsource] = useState(3);\r\n    const [description, setdescription] = useState(null);\r\n    const [priority, setpriority] = useState(1);\r\n    const [group_id, setgroup_id] = useState(\"\");\r\n    const [responder_id, setresponder_id] = useState(null);\r\n    const [tags, settags] = useState([]);\r\n\r\n    // acmpos para o editor de descrição\r\n    const [descEditor, setDescEditor] = useState(\"\");\r\n    const [contentState, setcontentState] = useState(\"\");\r\n\r\n    // ibicialização do editor de texto da descrição\r\n    const content = {\r\n        entityMap: {},\r\n        blocks: [\r\n            {\r\n                key: \"637gr\",\r\n                text: \"Initialized from content state.\",\r\n                type: \"unstyled\",\r\n                depth: 0,\r\n                inlineStyleRanges: [],\r\n                entityRanges: [],\r\n                data: {},\r\n            },\r\n        ],\r\n    }\r\n\r\n    \r\n    async function saveTicket(){\r\n        // monta o ticket e o envia para a API\r\n        let description_text = contentState.blocks[0].text;\r\n        console.log(priority);\r\n        setdescription(draftToHtml(contentState));\r\n        let ticket ={\r\n            email,\r\n            \"cc_emails\": [cc_emails],\r\n            type,\r\n            \"custom_fields\": {\r\n                cf_tipo_do_ticket264377,\r\n                cf_usurio331473,\r\n                \"cf_reclame_aqui_id\": cf_reclame_aqui_id == \"\" ? null : parseInt(cf_reclame_aqui_id),\r\n                \"cf_source_external_id\" : cf_source_external_id == \"\" || cf_source_external_id == null ? null : parseInt(cf_source_external_id),\r\n                cf_empresa_recebendo_a_reclamao,\r\n                cf_cliente_voltou_a_fazer_negocio,\r\n                \"cf_quantidade_de_comentarios_de_outros_usuarios\": cf_quantidade_de_comentarios_de_outros_usuarios==\"\" || cf_quantidade_de_comentarios_de_outros_usuarios == null? null : parseInt(cf_quantidade_de_comentarios_de_outros_usuarios),\r\n                cf_ticket_congelado_mais_de_30_dias_sem_resposta,\r\n                cf_sentimento_do_consumidor,\r\n                cf_motivo_da_reclamacao,\r\n                cf_status_do_ticket_no_reclame_aqui,\r\n                cf_solicitacao_para_o_cliente_avaliar_o_ticket,\r\n                cf_existe_um_pedido_de_moderacao,\r\n                \"cf_quantidade_de_solicitacoes_de_moderacao\" : cf_quantidade_de_solicitacoes_de_moderacao== \"\" || cf_quantidade_de_solicitacoes_de_moderacao == null? null : parseInt(cf_quantidade_de_solicitacoes_de_moderacao),\r\n                cf_tipo_de_resposta\r\n            },\r\n            subject,\r\n            'status' : parseInt(status),\r\n            source,\r\n            \"description\" : \"\"+description,\r\n            \"description_text\" : description_text,\r\n            \"priority\" : parseInt(priority),\r\n            group_id,\r\n            responder_id,\r\n            \"tags\" : tags == []? [] : [\"\"+tags]\r\n        }\r\n        // checa os campos e romove os campos vazios e muda os tipos para os tipos requeridos\r\n        for(let field in ticket){\r\n            if(ticket[field] == null || ticket[field] == undefined || ticket[field] == \"\")\r\n                delete ticket[field]\r\n            else if(field == 'custom_fields')\r\n                for(let sub_field in ticket[field]){\r\n                    if(ticket[field][sub_field] == null || ticket[field][sub_field] == undefined || ticket[field][sub_field] == \"\")\r\n                        delete ticket[field][sub_field]\r\n                    \r\n                }\r\n        }\r\n        console.log(cf_cliente_voltou_a_fazer_negocio);\r\n        console.log(ticket);\r\n        try {\r\n            await api.post('tickets', ticket, {\r\n                auth: {\r\n                    username: authLogin,\r\n                    password: authPass\r\n                }\r\n            })\r\n    \r\n        \r\n        } catch (err) {\r\n            alert('Erro ao cadastrar caso, tente novamente.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input id=\"menu-hamburguer\" type=\"checkbox\" className=\"inputHamburguer\"/>\r\n            <label for=\"menu-hamburguer\">\r\n                <div className=\"menu\">\r\n                    <span className=\"hamburguer\"></span>\r\n                </div>\r\n            </label>\r\n            <div className=\"contextMenu\">\r\n                <div className=\"conatinerContext\">\r\n                    <div className=\"topBarContext\">\r\n                        <div className=\"topBarContainer\">\r\n                            <img src={ iconeLoupen } alt=\"userImage\" className=\"imageIconContext\"/>\r\n                            <div className=\"textUserName\">\r\n                                NomeUsuario\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"contextOption\">\r\n                        Listar Tickets\r\n                    </div>\r\n                    <div className=\"contextOption\">\r\n                        Novo Ticket\r\n                    </div>\r\n                    <div className=\"contextOptionExit\">\r\n                        Sair\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"\">\r\n                    <div>\r\n\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            \r\n            <div className=\"contentContainerMain\">\r\n                <div className=\"topBarContent\">\r\n                    <img src={iconeFreshdesk} alt=\"FreshdeskTaskManager\" className=\"logoFrashdeskTopBar\"/>\r\n                    <div className=\"formContainerInput\">\r\n                        <form action=\"\">\r\n                            <input type=\"search\" placeholder=\"Buscar Ticket\" className=\"inputSearchTopBar\"/>  \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"formContent\">\r\n                    <div className=\"tituloNewticket\">\r\n                        Novo Ticket\r\n                    </div>\r\n                    \r\n                    <div className=\"formcontainer\">\r\n                        <div  className=\"formNewTicket\">\r\n\r\n                            <div className=\"inputDescription\">Contato</div>  \r\n                            <input type=\"text\" className=\"formInput\" name=\"email\" onChange={e => setemail(e.target.value)} value={email} placeholder =\"E-mail do contato\"/>\r\n\r\n                            <div className=\"inputDescription\">Cc</div>  \r\n                            <input type=\"text\" className=\"formInput\" name=\"cc_emails\" onChange={e => setcc_emails(e.target.value)} value={cc_emails}/>\r\n\r\n                            <div className=\"inputDescription\">Tipo</div>  \r\n                            <select name=\"type\" id=\"type\" className=\"formInput formSelect\" onChange={e => settype(e.target.value)} value={type}>\r\n                                <option value=\"\">--</option>\r\n                                <option value=\"Mercado Livre\">Mercado Livre</option>\r\n                                <option value=\"Reclame Aqui\">Reclame Aqui</option>\r\n                            </select>\r\n                            {\r\n                                type === \"Mercado Livre\"?\r\n                                    <div className=\"inputsMercadoLivre\">\r\n                                        <div className=\"inputDescription\">Tipo do ticket</div>  \r\n                                        <select name=\"cf_tipo_do_ticket264377\" id=\"type\" className=\"formInput formSelect\" onChange={e => setcf_tipo_do_ticket264377(e.target.value)} value={cf_tipo_do_ticket264377}>\r\n                                            <option value=\"\">--</option>\r\n                                            <option value=\"Questões\">Questões</option>\r\n                                            <option value=\"Compras\">Compras</option>\r\n                                            <option value=\"Mensagem\">Mensagem</option>\r\n                                        </select>\r\n                                        <div className=\"inputDescription\">Usuário</div>  \r\n                                        <input name=\"cf_usurio331473\" type=\"text\" className=\"formInput\" onChange={e => setcf_usurio331473(e.target.value)} value={cf_usurio331473}/>\r\n                                    </div>\r\n                                    :\r\n                                    type === \"Reclame Aqui\"?\r\n                                        <div className=\"inputsReclameAqui\">\r\n                                            <div className=\"inputDescription\">Reclame Aqui id</div>  \r\n                                            <input name=\"cf_reclame_aqui_id\" type=\"number\" className=\"formInput\" onChange={e => setcf_reclame_aqui_id(e.target.value)} value={cf_reclame_aqui_id}/>\r\n                                            <div className=\"inputDescription\">source_external_id</div>\r\n                                            <input name=\"cf_source_external_id\" type=\"number\" className=\"formInput\" onChange={e => setcf_source_external_id(e.target.value)} value={cf_source_external_id}/>  \r\n                                            <div className=\"inputDescription\">Empresa recebendo a reclamação</div>\r\n                                            <input name=\"cf_empresa_recebendo_a_reclamao\" type=\"text\" className=\"formInput\" onChange={e => setcf_empresa_recebendo_a_reclamao(e.target.value)} value={cf_empresa_recebendo_a_reclamao}/> \r\n                                            <div className=\"checkboxForm\">\r\n                                                <input name=\"cf_cliente_voltou_a_fazer_negocio\" type=\"checkbox\" onChange={() => {setcf_cliente_voltou_a_fazer_negocio(cf_cliente_voltou_a_fazer_negocio == null? (true) : (null))}} />\r\n                                                Cliente voltou a fazer negocio?\r\n                                            </div>   \r\n                                            <div className=\"inputDescription\">Quantidade de comentarios de outros usuários</div>\r\n                                            <input name=\"cf_quantidade_de_comentarios_de_outros_usuarios\" type=\"number\" className=\"formInput\" onChange={e => setcf_quantidade_de_comentarios_de_outros_usuarios(e.target.value)} value={cf_quantidade_de_comentarios_de_outros_usuarios}/>\r\n                                            <div className=\"checkboxForm\">\r\n                                                <input name=\"cf_ticket_congelado_mais_de_30_dias_sem_resposta\" type=\"checkbox\" onChange={() => setcf_ticket_congelado_mais_de_30_dias_sem_resposta(cf_ticket_congelado_mais_de_30_dias_sem_resposta == null? (true) : (null))} value={cf_ticket_congelado_mais_de_30_dias_sem_resposta}/>\r\n                                                Ticket congelado mais de 30 dias sem resposta\r\n                                            </div>\r\n                                            <div className=\"inputDescription\">Sentimento do consumidor</div>\r\n                                            <input name=\"cf_sentimento_do_consumidor\" type=\"text\" className=\"formInput\" onChange={e => setcf_sentimento_do_consumidor(e.target.value)} value={cf_sentimento_do_consumidor}/>\r\n                                            <div className=\"inputDescription\">Motivo da reclamacao</div>\r\n                                            <input name=\"cf_motivo_da_reclamacao\" type=\"text\" className=\"formInput\" onChange={e => setcf_motivo_da_reclamacao(e.target.value)} value={cf_motivo_da_reclamacao}/>                 \r\n                                            <div className=\"inputDescription\">Status do ticket do reclame aqui</div>\r\n                                            <select name=\"cf_status_do_ticket_no_reclame_aqui\" id=\"type\" className=\"formInput formSelect\" onChange={e => setcf_status_do_ticket_no_reclame_aqui(e.target.value)} value={cf_status_do_ticket_no_reclame_aqui}>\r\n                                                <option value=\"\">--</option>\r\n                                                <option value=\"Não respondido\">Não respondido</option>\r\n                                                <option value=\"Respondido\">Respondido</option>\r\n                                                <option value=\"Réplica do consumidor\">Réplica do consumidor</option>\r\n                                                <option value=\"Réplica da empresa\">Réplica da empresa</option>\r\n                                                <option value=\"Avaliado\">Avaliado</option>\r\n                                                <option value=\"Congelado\">Congelado</option>\r\n                                                <option value=\"Desativado pelo consumidor\">Desativado pelo consumidor</option>\r\n                                                <option value=\"Inativa no ReclameAQUI\">Inativa no ReclameAQUI</option>\r\n                                                <option value=\"Avaliado Resolvido\">Avaliado Resolvido</option>\r\n                                                <option value=\"Avaliado Não Resolvido\">Avaliado Não Resolvido</option>\r\n                                                <option value=\"Resposta\">Resposta</option>   \r\n                                            </select>\r\n                                            <div className=\"checkboxForm\">\r\n                                                <input name=\"cf_solicitacao_para_o_cliente_avaliar_o_ticket\" type=\"checkbox\" onChange={()=>cf_solicitacao_para_o_cliente_avaliar_o_ticket == null? (true) : (null)}/>\r\n                                                Solicitaçãopara o cliente avaliar o ticket?\r\n                                            </div>\r\n                                            <div className=\"checkboxForm\">\r\n                                                <input name=\"cf_existe_um_pedido_de_moderacao\" type=\"checkbox\" onChange={() => cf_existe_um_pedido_de_moderacao == null? (true) : (null)} value={cf_existe_um_pedido_de_moderacao}/>\r\n                                                Existe um pedido de moderação?\r\n                                            </div>\r\n                                            <div className=\"inputDescription\">Quantidade de solicitações demoderação</div>\r\n                                            <input name=\"cf_quantidade_de_solicitacoes_de_moderacao\" type=\"number\" className=\"formInput\" onChange={e => setcf_quantidade_de_solicitacoes_de_moderacao(e.target.value)} value={cf_quantidade_de_solicitacoes_de_moderacao}/>\r\n                                            <div className=\"inputDescription\">tipo de resposta</div>\r\n                                            <select name=\"cf_tipo_de_resposta\" id=\"type\" className=\"formInput formSelect\" onChange={e => setcf_tipo_de_resposta(e.target.value)} value={cf_tipo_de_resposta}>\r\n                                                <option value=\"\">--</option>\r\n                                                <option value=\"Publica\">Publica</option>\r\n                                                <option value=\"Privada\">Privada</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        :\r\n                                        <></>\r\n                            }\r\n                            \r\n                            \r\n\r\n                            <div className=\"inputDescription\">Assunto</div>\r\n                            <input name=\"subject\" type=\"text\" className=\"formInput\" onChange={e => setsubject(e.target.value)} value={subject}/>\r\n\r\n                            <div className=\"inputDescription\">Status</div>\r\n                            <select name=\"status\" id=\"status\" className=\"formInput formSelect\" onChange={e => setstatus(e.target.value)} value={status}>\r\n                                <option value=\"2\" selected>Aberto</option>\r\n                                <option value=\"18\">Teste</option>\r\n                                <option value=\"3\">Pendente</option>\r\n                                <option value=\"4\">Resolvido</option>\r\n                                <option value=\"5\">Fechado</option>\r\n                                <option value=\"23\">EM DESENV</option>   \r\n                            </select>\r\n\r\n                            <div className=\"inputDescription\">Origem</div>\r\n                            <select name=\"source\" id=\"status\" className=\"formInput formSelect\" onChange={e => setsource(e.target.value)} value={source}>\r\n                                <option value=\"3\" selected>Telefone</option> \r\n                            </select>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className=\"inputDescription\">Descrição</div>\r\n                            <Editor\r\n                                initialContentState={content}\r\n                                editorState={descEditor}\r\n                                toolbarClassName=\"toolbarClassName\"\r\n                                wrapperClassName=\"wrapperClassName\"\r\n                                editorClassName=\"editorClassName\"\r\n                                onEditorStateChange={setDescEditor}\r\n\r\n                                \r\n                                editorContent={contentState}\r\n                                onContentStateChange={setcontentState}\r\n                            />\r\n\r\n\r\n\r\n                            <div className=\"inputDescription\">Prioridade</div>\r\n                            <select name=\"priority\" id=\"status\" className=\"formInput formSelect\" onChange={e => setpriority(e.target.value)} value={priority}>\r\n                                <option value=\"1\" selected>Baixa</option>\r\n                                <option value=\"2\">Media</option>\r\n                                <option value=\"3\">Alta</option>\r\n                                <option value=\"4\">Urgente</option>  \r\n                            </select>\r\n\r\n                            <div className=\"inputDescription\">Grupo</div>\r\n                            <select name=\"group_id\" id=\"status\" className=\"formInput formSelect\" onChange={e => {setgroup_id(e.target.value)}} value={group_id}>\r\n                                <option value=\"\" selected>--</option>\r\n                                {    \r\n                                    agentsIds.data.groups.map(group =>\r\n                                            <option value={group.id}>{group.name}</option>  \r\n                                    )\r\n                                }\r\n                                \r\n                                \r\n                            </select>\r\n\r\n                            <div className=\"inputDescription\">Analista</div>\r\n                            <select name=\"responder_id\" id=\"status\" className=\"formInput formSelect\" onChange={e => setresponder_id(e.target.value)} value={responder_id}>\r\n                                <option value=\"\">--</option>\r\n                                { \r\n                                    // Percorre o documento que guarda as informações dobre os agentes\r\n                                    // em cada grupo e preenche com os agentes pertencentes ao grupo\r\n                                }\r\n                                {\r\n                                    agentsIds.data.agents.map( agent => \r\n                                        group_id !== \"\"  ?\r\n                                            agent.group_ids.includes(parseInt(group_id))?\r\n                                                <option value={agent.id}>{agent.contact.name}</option>\r\n                                            :\r\n                                                <></> \r\n                                        :    \r\n                                            <option value={agent.id}>{agent.contact.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n\r\n                            <div className=\"inputDescription\">Tags</div>                        \r\n                            <input name=\"tags\" type=\"text\" className=\"formInput\" onChange={e => settags(e.target.value)} value={tags}/>\r\n\r\n                            <div className=\"submitContainer\">\r\n                                <button className=\"submitSalvar\" type=\"submit\" onClick={()=> saveTicket()}>Salvar</button>\r\n                                <button className=\"submitCancelar\">Cancelar</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\services\\api.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\index.js",["88","89","90"],"import './styles.css';\r\n\r\nimport { Link , useHistory, useParams } from 'react-router-dom';\r\nimport React , { useState, useEffect } from 'react';\r\n\r\nimport iconeLoupen from '../../assets/images/icone-Loupen.png';\r\nimport iconeFreshdesk from '../../assets/images/logo-Freshdesk.png';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Ticketparam from './Ticketparam.js';\r\n\r\nimport api from '../../services/api';\r\n\r\n\r\nexport default function Viewticket(){\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    const [ticketInfo, setTicketInfo] = useState(null);\r\n\r\n    let authLogin = localStorage.getItem('authLogin');\r\n    let authPass = localStorage.getItem('authPass');\r\n    var priorityDict = [\"\", \"Baixa\", \"Media\", \"Alta\", \"Urgente\"];\r\n    var priorityStyleDict = [\"\", \"lowPriority\", \"mediumPriority\", \"highPriority\", \"urgentPriority\"];\r\n    var sourceDict = {\r\n        3: \"Telefone\"\r\n    };\r\n    var statusDict = {\r\n        2: \"Aberto\",\r\n        3: \"Pendente\",\r\n        4: \"Resolvido\",\r\n        5: \"Fechado\",\r\n        18: \"Teste\",\r\n        23: \"EM DESENV\"\r\n    }\r\n\r\n    function handleLogout(){\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // carrega os resultados da busca feita na pagina inicial\r\n        if(ticketInfo == null){\r\n            console.log(\"carregou\")\r\n            api.get(\"tickets/\"+id, {\r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(async response => {\r\n                let ticketResp = response.data;\r\n                let requester = ticketResp.requester_id;\r\n                let requesterResponse;\r\n                try{\r\n                    requesterResponse = await api.get('contacts/'+requester, {  \r\n                        \"auth\": {\r\n                            \"username\" : authLogin,\r\n                            \"password\" : authPass\r\n                        }\r\n                    })\r\n                }catch(err){\r\n                    requesterResponse = null;\r\n                }\r\n                \r\n                let nameUserC = requesterResponse == null? \"RequesterName\" : requesterResponse.data.name.split('@')[0].split(' ')[0];\r\n\r\n                ticketResp.requester_id = \"https://ui-avatars.com/api/?name=\"+nameUserC+\"&size=128&background=random\";\r\n                ticketResp.responder_id = nameUserC;\r\n                \r\n                console.log(ticketResp);\r\n                setTicketInfo(ticketResp);\r\n            });\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <input id=\"menu-hamburguer\" type=\"checkbox\" className=\"inputHamburguer\"/>\r\n            <label htmlFor=\"menu-hamburguer\">\r\n                <div className=\"menu\">\r\n                    <span className=\"hamburguer\"></span>\r\n                </div>\r\n            </label>\r\n            <div className=\"contextMenu\">\r\n                <div className=\"conatinerContext\">\r\n                    <div className=\"topBarContext\">\r\n                        <div className=\"topBarContainer\">\r\n                            <img src={ iconeLoupen } alt=\"userImage\" className=\"imageIconContext\"/>\r\n                            <div className=\"textUserName\">\r\n                                NomeUsuario\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"contextOption\">\r\n                        Listar Tickets\r\n                    </div>\r\n                    <div className=\"contextOption\">\r\n                        Novo Ticket\r\n                    </div>\r\n                    <div className=\"contextOptionExit\" onClick={handleLogout}>\r\n                        Sair\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"\">\r\n                    <div>\r\n\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            \r\n            <div className=\"contentContainerMain\">\r\n                <div className=\"topBarContent\">\r\n                    <img src={iconeFreshdesk} alt=\"FreshdeskTaskManager\" className=\"logoFrashdeskTopBar\"/>\r\n                    <div className=\"formContainerInput\">\r\n                        <form action=\"\">\r\n                            <input type=\"search\" placeholder=\"Buscar Ticket\" className=\"inputSearchTopBar\"/>  \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ticketsResult\">\r\n                    {\r\n                        ticketInfo == null?\r\n                            <></>\r\n                        :\r\n                        <div className=\"searchResults\">\r\n                            <div className=\"boxTicketView\">\r\n                                <div className=\"ticketViewCard\">\r\n                                    <div className=\"ticketTitulo\">\r\n                                        {ticketInfo.subject}\r\n                                    </div>\r\n                                    <div className=\"infosIniciais\">\r\n                                        <div className=\"ticketUserRequest\">\r\n                                            <div className=\"containerRequesterInformationsTicket\">\r\n                                                <div className=\"containerTicket\">\r\n                                                    <img src={ticketInfo.requester_id} alt={ticketInfo.responder_id} />\r\n                                                </div>\r\n                                                <div className=\"userTicket\">{ticketInfo.responder_id}</div>\r\n                                            </div>\r\n                                            <div className=\"sourceTicket\">\r\n                                                Relatado por {sourceDict[ticketInfo.source]}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"ticketPriority\">\r\n                                            <div className=\"containerTicketPriority\">\r\n                                                Prioridade {priorityDict[ticketInfo.priority]}\r\n                                            </div>\r\n                                                <div className={ \"iconePrioridadeTicket \" + priorityStyleDict[ticketInfo.priority]}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"ticketDescription\">\r\n                                        <div className=\"legendaDescription\">\r\n                                            Descrição\r\n                                        </div>\r\n                                        <div className=\"boxDescription\">\r\n                                            <div dangerouslySetInnerHTML={{ __html: ticketInfo.description }} />\r\n                                        </div>  \r\n                                    </div>\r\n                                    <div className=\"tiketTimeLeft\">\r\n                                        Prazo para primeira resposta vence em 5 horas.\r\n                                    </div>\r\n                                    <div className=\"tiketMoreInfos\">\r\n                                        <Ticketparam title={\"Tipo\"} name={ticketInfo.type}/>\r\n\r\n                                        <Ticketparam title={\"Usuario\"} name={ticketInfo.cf_usurio331473}/>\r\n                                        <Ticketparam title={\"Tipo do ticket\"} name={ticketInfo.cf_tipo_do_ticket264377}/>\r\n                                        <Ticketparam title={\"Reclame aqui id\"} name={ticketInfo.cf_reclame_aqui_id}/>\r\n                                        <Ticketparam title={\"Source external id\"} name={ticketInfo.cf_source_external_id}/>\r\n                                        <Ticketparam title={\"Empresa recebendo reclamação\"} name={ticketInfo.cf_empresa_recebendo_a_reclamao}/>\r\n                                        <Ticketparam title={\"Cliente voltou a fazer negocio\"} name={ticketInfo.cf_cliente_voltou_a_fazer_negocio}/>\r\n                                        <Ticketparam title={\"Ticket congelado mais de 30 dias sem resposta\"} name={ticketInfo.cf_ticket_congelado_mais_de_30_dias_sem_resposta}/>\r\n\r\n                                        <Ticketparam title={\"Status\"} name={statusDict[ticketInfo.status]}/>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                    <div className=\"buttonsActions\">\r\n                                        <button className=\"buttonExcluirTicket\" >Excluir</button>\r\n                                        <Link to={\"/edit/\"+ticketInfo.id} className=\"linkRoute\">\r\n                                            <button className=\"buttonEditarTicket\">Editar</button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\ticketparam.js",["91"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\Ticketparam.js",["92","93"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Changeticket\\index.js",["94","95","96","97","98","99","100","101","102","103","104","105"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Form.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Contextmenu.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Topbar.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"110","severity":1,"message":"114","line":6,"column":10,"nodeType":"112","messageId":"113","endLine":6,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":22,"column":19,"nodeType":"112","messageId":"113","endLine":22,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":25,"column":40,"nodeType":"118","messageId":"119","endLine":25,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":42,"column":30,"nodeType":"118","messageId":"119","endLine":42,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":139,"column":47,"nodeType":"118","messageId":"119","endLine":139,"endColumn":49},{"ruleId":"110","severity":1,"message":"111","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"110","severity":1,"message":"120","line":38,"column":60,"nodeType":"112","messageId":"113","endLine":38,"endColumn":109},{"ruleId":"110","severity":1,"message":"121","line":39,"column":46,"nodeType":"112","messageId":"113","endLine":39,"endColumn":81},{"ruleId":"116","severity":1,"message":"117","line":84,"column":58,"nodeType":"118","messageId":"119","endLine":84,"endColumn":60},{"ruleId":"116","severity":1,"message":"117","line":85,"column":65,"nodeType":"118","messageId":"119","endLine":85,"endColumn":67},{"ruleId":"116","severity":1,"message":"117","line":88,"column":115,"nodeType":"118","messageId":"119","endLine":88,"endColumn":117},{"ruleId":"116","severity":1,"message":"117","line":95,"column":106,"nodeType":"118","messageId":"119","endLine":95,"endColumn":108},{"ruleId":"116","severity":1,"message":"117","line":106,"column":27,"nodeType":"118","messageId":"119","endLine":106,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":110,"column":55,"nodeType":"118","messageId":"119","endLine":110,"endColumn":57},{"ruleId":"116","severity":1,"message":"117","line":110,"column":85,"nodeType":"118","messageId":"119","endLine":110,"endColumn":87},{"ruleId":"116","severity":1,"message":"117","line":112,"column":27,"nodeType":"118","messageId":"119","endLine":112,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":114,"column":85,"nodeType":"118","messageId":"119","endLine":114,"endColumn":87},{"ruleId":"116","severity":1,"message":"117","line":114,"column":126,"nodeType":"118","messageId":"119","endLine":114,"endColumn":128},{"ruleId":"110","severity":1,"message":"122","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":18},{"ruleId":"110","severity":1,"message":"123","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":16},{"ruleId":"110","severity":1,"message":"124","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":18},{"ruleId":"110","severity":1,"message":"125","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":15,"column":36,"nodeType":"118","messageId":"119","endLine":15,"endColumn":38},{"ruleId":"116","severity":1,"message":"117","line":18,"column":36,"nodeType":"118","messageId":"119","endLine":18,"endColumn":38},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"126","line":18,"column":11,"nodeType":"112","messageId":"113","endLine":18,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":41,"column":30,"nodeType":"118","messageId":"119","endLine":41,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":43,"column":35,"nodeType":"118","messageId":"119","endLine":43,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":49,"column":36,"nodeType":"118","messageId":"119","endLine":49,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":89,"column":13,"nodeType":"129","messageId":"130","endLine":89,"endColumn":55,"fix":"131"},{"ruleId":"127","severity":1,"message":"132","line":90,"column":13,"nodeType":"129","messageId":"130","endLine":90,"endColumn":51,"fix":"133"},{"ruleId":"116","severity":1,"message":"117","line":96,"column":65,"nodeType":"118","messageId":"119","endLine":96,"endColumn":67},{"ruleId":"116","severity":1,"message":"117","line":96,"column":100,"nodeType":"118","messageId":"119","endLine":96,"endColumn":102},{"ruleId":"116","severity":1,"message":"117","line":98,"column":27,"nodeType":"118","messageId":"119","endLine":98,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":100,"column":95,"nodeType":"118","messageId":"119","endLine":100,"endColumn":97},{"ruleId":"116","severity":1,"message":"117","line":100,"column":141,"nodeType":"118","messageId":"119","endLine":100,"endColumn":143},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'resultLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setcf_solicitacao_para_o_cliente_avaliar_o_ticket' is assigned a value but never used.","'setcf_existe_um_pedido_de_moderacao' is assigned a value but never used.","'AddBoxIcon' is defined but never used.","'Skeleton' is defined but never used.","'Pagination' is defined but never used.","'ticketparam' is defined but never used.","'history' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"description\"] found.","Property","unnecessarilyComputedProperty",{"range":"136","text":"137"},"Unnecessarily computed property [\"description_text\"] found.",{"range":"138","text":"139"},"no-global-assign","no-unsafe-negation",[2812,2827],"\"description\"",[2869,2889],"\"description_text\""]