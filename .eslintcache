[{"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\index.js":"1","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\reportWebVitals.js":"2","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\App.js":"3","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\Routes.js":"4","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Login\\index.js":"5","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Main\\index.js":"6","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Newticket\\index.js":"7","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\services\\api.js":"8","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\index.js":"9","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\ticketparam.js":"10","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\Ticketparam.js":"11","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Changeticket\\index.js":"12","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Form.js":"13","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Contextmenu.js":"14","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Topbar.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":209,"mtime":1611415139607,"results":"19","hashOfConfig":"17"},{"size":797,"mtime":1611948784374,"results":"20","hashOfConfig":"17"},{"size":2556,"mtime":1611853426314,"results":"21","hashOfConfig":"17"},{"size":10080,"mtime":1611903695673,"results":"22","hashOfConfig":"17"},{"size":5321,"mtime":1611985282836,"results":"23","hashOfConfig":"17"},{"size":140,"mtime":1611853423274,"results":"24","hashOfConfig":"17"},{"size":7852,"mtime":1611973645081,"results":"25","hashOfConfig":"17"},{"size":700,"mtime":1611908336977,"results":"26","hashOfConfig":"17"},{"size":700,"mtime":1611967237678,"results":"27","hashOfConfig":"17"},{"size":4643,"mtime":1611982774534,"results":"28","hashOfConfig":"17"},{"size":13049,"mtime":1611968441406,"results":"29","hashOfConfig":"17"},{"size":1796,"mtime":1611972162682,"results":"30","hashOfConfig":"17"},{"size":618,"mtime":1611971790290,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16mam37",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\index.js",[],["70","71"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\reportWebVitals.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\App.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\Routes.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Login\\index.js",["72","73","74","75"],"import React , { useState, useEffect } from 'react';\r\n\r\nimport logoLoupen from '../../assets/images/logo-Loupen.png';\r\nimport logoFreshdesk from '../../assets/images/logo-FreshdeskFull.svg';\r\nimport './styles.css';\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nexport default function Login(){\r\n\r\n    const history = useHistory();\r\n    const [emailLogin, setemail] = useState(\"\");\r\n    const [senha, setsenha] = useState(\"\");\r\n\r\n    async function makeLogin() {\r\n        console.log({emailLogin, senha});\r\n        try {\r\n            var auth = {\r\n                username: emailLogin,\r\n                password: senha\r\n            }\r\n            const resultLogin = await api.get('tickets', {\r\n                auth\r\n            }).then( response => {\r\n                    if(response.status == 200){\r\n                        localStorage.setItem('authLogin', auth.username);\r\n                        localStorage.setItem('authPass', auth.password);\r\n                        history.push('/home');\r\n                    }\r\n                }\r\n            )\r\n            \r\n        \r\n        } catch (err) {\r\n            alert('Erro ao cadastrar caso, tente novamente.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n \r\n\r\n    return(\r\n        <div className=\"containerPage\">\r\n            <div className=\"pageLogin\">  \r\n                <div className=\"boxLogos\">\r\n                    <div className=\"boxImage\">\r\n                        <img src={ logoLoupen } className=\"logoLoupenLogin\" alt=\"Loupen\"/> \r\n                    </div>\r\n                    <div className=\"boxImage\">\r\n                        <img src={ logoFreshdesk } className=\"logoFreshdesklogin\" alt=\"Fresshdesk\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"boxInputsLogin\">\r\n                    <div className=\"boxInput\">\r\n                        <input value = {emailLogin} onChange={ e=>setemail(e.target.value)} type=\"email\" placeholder=\"E-mail\" className=\"inputEmailLogin inputLogin\"/>\r\n                    </div>\r\n                    <div className=\"boxInput\">\r\n                        <input value={senha} onChange={ e=>setsenha(e.target.value)} type=\"password\" placeholder=\"Senha\" className=\"inputSenhaLogin inputLogin\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"boxButton\">\r\n                    <button type=\"submit\" className=\"buttonEnviar\" onClick={makeLogin} >Entrar</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Main\\index.js",["76","77"],"import './styles.css';\r\n\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport React , { useState, useEffect } from 'react';\r\n\r\nimport iconeLoupen from '../../assets/images/icone-Loupen.png';\r\nimport iconeFreshdesk from '../../assets/images/logo-Freshdesk.png';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Main(){\r\n    const history = useHistory();\r\n\r\n    const [ticketList, setTicketList] = useState([]);\r\n\r\n    let authLogin = localStorage.getItem('authLogin');\r\n    let authPass = localStorage.getItem('authPass');\r\n    var priorityDict = [\"\", \"Baixa\", \"Media\", \"Alta\", \"Urgente\"];\r\n    var priorityStyleDict = [\"\", \"lowPriority\", \"mediumPriority\", \"highPriority\", \"urgentPriority\"];\r\n    var statusDict = {\r\n        2: \"Aberto\",\r\n        3: \"Pendente\",\r\n        4: \"Resolvido\",\r\n        5: \"Fechado\",\r\n        18: \"Teste\",\r\n        23: \"EM DESENV\"\r\n    }\r\n\r\n    function handleLogout(){\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n    });\r\n    useEffect(()=>{\r\n        // carrega os ultimos tickets registrados\r\n        if(ticketList.length == 0){\r\n            console.log(\"carregou\")\r\n            api.get('tickets?per_page=10&page=1', {\r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(async response => {\r\n\r\n                let ticketsResp = response.data;\r\n                // busca para cada tiket o nome do usuário queo registrou e adiciona \r\n                // a informação aos dados do ticket, junto com a url de um icone de perfil\r\n                // os substituindo em requester_id e responder_id\r\n                // já que estes campos não são usados na visualização inicial\r\n                for(let i = 0; i < ticketsResp.length; i++){\r\n                    let requester = ticketsResp[i].requester_id;\r\n                    let requesterResponse;\r\n                    try{\r\n                        requesterResponse = await api.get('contacts/'+requester, {  \r\n                            \"auth\": {\r\n                                \"username\" : authLogin,\r\n                                \"password\" : authPass\r\n                            }\r\n                        })\r\n                    }catch(err){\r\n                        requesterResponse = null;\r\n                    }\r\n                    // existem usuarios quepor algum motivo não possuem nome cadastrado\r\n                    // nesse caso será exibido apenas o nome \"RequesterName\"\r\n                    let nameUserC = requesterResponse == null? \"RequesterName\" : requesterResponse.data.name.split('@')[0].split(' ')[0];\r\n\r\n                    ticketsResp[i].requester_id = \"https://ui-avatars.com/api/?name=\"+nameUserC+\"&size=128&background=random\";\r\n                    ticketsResp[i].responder_id = nameUserC;\r\n                    console.log(ticketsResp[i])\r\n                }\r\n                // atualiza os tickets na lista para serem visualizados \r\n                setTicketList(ticketsResp);\r\n            });\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <input id=\"menu-hamburguer\" type=\"checkbox\" className=\"inputHamburguer\"/>\r\n            <label htmlFor=\"menu-hamburguer\">\r\n                <div className=\"menu\">\r\n                    <span className=\"hamburguer\"></span>\r\n                </div>\r\n            </label>\r\n            <div className=\"contextMenu\">\r\n                <div className=\"conatinerContext\">\r\n                    <div className=\"topBarContext\">\r\n                        <div className=\"topBarContainer\">\r\n                            <img src={ iconeLoupen } alt=\"userImage\" className=\"imageIconContext\"/>\r\n                            <div className=\"textUserName\">\r\n                                NomeUsuario\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=>history.push('/home')}>\r\n                        Listar Tickets\r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=>history.push('/new')}>\r\n                        Novo Ticket\r\n                    </div>\r\n                    <div className=\"contextOptionExit\" onClick={handleLogout}>\r\n                        Sair\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"\">\r\n                    <div>\r\n\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            \r\n            <div className=\"contentContainerMain\">\r\n                <div className=\"topBarContent\">\r\n                    <img src={iconeFreshdesk} alt=\"FreshdeskTaskManager\" className=\"logoFrashdeskTopBar\"/>\r\n                    <div className=\"formContainerInput\">\r\n                        <form action=\"\">\r\n                            <input type=\"search\" placeholder=\"Buscar Ticket\" className=\"inputSearchTopBar\"/>  \r\n                        </form>\r\n                        <div className=\"containerNewTicket\">\r\n                            <Link to=\"/new\" className=\"linkRoute\">\r\n                                <button className=\"buttonNewTicket\" >\r\n                                    <AddBoxIcon className=\"iconNewTicket\"/>\r\n                                    Novo Ticket\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ticketsResult\">\r\n                    <div className=\"searchResults\">\r\n                        {\r\n                            // carrega placeHolders enquanto não há dados\r\n                            ticketList.length == 0?\r\n                                <div className=\"\">\r\n                                    <Skeleton variant=\"rect\"  className =\"compSkelethon\" height={118} />\r\n                                    <Skeleton variant=\"rect\" className =\"compSkelethon\"  height={118} />\r\n                                    <Skeleton variant=\"rect\" className =\"compSkelethon\"  height={118} />\r\n                                </div>\r\n                            :\r\n                                ticketList.map(ticket => \r\n                                    <Link to={\"/ticket/\"+ticket.id} className=\"linkRoute\">\r\n                                        <div className=\"ticketCard\">\r\n                                            <div className=\"section1\">\r\n                                                <div className=\"remainingTimeticket1\">\r\n                                                    Prazo para primeira resposta vence em 5 horas\r\n                                                </div>\r\n                                                <div className=\"containerRequesterInformations\">\r\n                                                    <div className=\"containerImageTicket\">\r\n                                                        <img src={ticket.requester_id} alt={ticket.responder_id} />\r\n                                                    </div>\r\n                                                    <div className=\"userNameTicket\">{ticket.responder_id}</div>\r\n                                                </div>\r\n                                                <div className=\"tagsContainer\">\r\n                                                    {\r\n                                                        ticket.tags.map(tag => \r\n                                                            <div className=\"tagTicket\">\r\n                                                                • {tag}\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"section2\">\r\n                                                {ticket.subject}\r\n                                            </div>\r\n                                            <div className=\"section3\">\r\n                                                <div className=\"containerSection\">\r\n                                                    <div className=\"priorityTicket\">\r\n                                                        {priorityDict[ticket.priority]}\r\n                        \r\n                                                        <div className={ \"iconePrioridade \" + priorityStyleDict[ticket.priority]}></div>\r\n                                                    </div>\r\n                                                    <div className=\"sectionDivider\"></div>\r\n                                                    <div className=\"containerStatus\">\r\n                                                        <div className=\"statusTicket\">\r\n                                                            {statusDict[ticket.status]}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"remainingTimeticket2\">\r\n                                                        Prazo para primeira resposta vence em 5 horas\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                        }\r\n                        <Pagination count={10} variant=\"outlined\" shape=\"rounded\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Newticket\\index.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\services\\api.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\index.js",["92"],"import './styles.css';\r\n\r\nimport { Link , useHistory, useParams } from 'react-router-dom';\r\nimport React , { useState, useEffect } from 'react';\r\n\r\nimport Contextmenu from '../../components/Contextmenu';\r\nimport Topbar from '../../components/Topbar';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Ticketparam from './Ticketparam.js';\r\n\r\nimport api from '../../services/api';\r\n\r\n\r\nexport default function Viewticket(){\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    const [ticketInfo, setTicketInfo] = useState(null);\r\n\r\n    let authLogin = localStorage.getItem('authLogin');\r\n    let authPass = localStorage.getItem('authPass');\r\n    var priorityDict = [\"\", \"Baixa\", \"Media\", \"Alta\", \"Urgente\"];\r\n    var priorityStyleDict = [\"\", \"lowPriority\", \"mediumPriority\", \"highPriority\", \"urgentPriority\"];\r\n    var sourceDict = {\r\n        3: \"Telefone\"\r\n    };\r\n    var statusDict = {\r\n        2: \"Aberto\",\r\n        3: \"Pendente\",\r\n        4: \"Resolvido\",\r\n        5: \"Fechado\",\r\n        18: \"Teste\",\r\n        23: \"EM DESENV\"\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // carrega os resultados da busca feita na pagina inicial\r\n        if(ticketInfo == null){\r\n            console.log(\"carregou\")\r\n            api.get(\"tickets/\"+id, {\r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(async response => {\r\n                let ticketResp = response.data;\r\n                let requester = ticketResp.requester_id;\r\n                let requesterResponse;\r\n                try{\r\n                    requesterResponse = await api.get('contacts/'+requester, {  \r\n                        \"auth\": {\r\n                            \"username\" : authLogin,\r\n                            \"password\" : authPass\r\n                        }\r\n                    })\r\n                }catch(err){\r\n                    requesterResponse = null;\r\n                }\r\n                \r\n                let nameUserC = requesterResponse == null? \"RequesterName\" : requesterResponse.data.name.split('@')[0].split(' ')[0];\r\n\r\n                ticketResp.requester_id = \"https://ui-avatars.com/api/?name=\"+nameUserC+\"&size=128&background=random\";\r\n                ticketResp.responder_id = nameUserC;\r\n                \r\n                console.log(ticketResp);\r\n                setTicketInfo(ticketResp);\r\n            });\r\n        }\r\n    });\r\n\r\n    function excluirTicket(){\r\n        try{\r\n            api.delete('tickets/'+id, {  \r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(response =>{\r\n                console.log(response.data)\r\n            })\r\n        }catch(err){\r\n            alert(\"Não foi possivel excluir o ticket\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Contextmenu/>\r\n            <div className=\"contentContainerMain\">\r\n                <Topbar/>\r\n                <div className=\"ticketsResult\">\r\n                    <div className=\"searchResults\">\r\n                        <div className=\"boxTicketView\">\r\n                        {\r\n                            ticketInfo == null?\r\n                                <Skeleton className=\"skeletonViewTicket\" height={300}/>\r\n                            :\r\n                                <div className=\"ticketViewCard\">\r\n                                    <div className=\"ticketTitulo\">\r\n                                        {ticketInfo.subject}\r\n                                    </div>\r\n                                    <div className=\"infosIniciais\">\r\n                                        <div className=\"ticketUserRequest\">\r\n                                            <div className=\"containerRequesterInformationsTicket\">\r\n                                                <div className=\"containerTicket\">\r\n                                                    <img src={ticketInfo.requester_id} alt={ticketInfo.responder_id} />\r\n                                                </div>\r\n                                                <div className=\"userTicket\">{ticketInfo.responder_id}</div>\r\n                                            </div>\r\n                                            <div className=\"sourceTicket\">\r\n                                                Relatado por {sourceDict[ticketInfo.source]}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"ticketPriority\">\r\n                                            <div className=\"containerTicketPriority\">\r\n                                                Prioridade {priorityDict[ticketInfo.priority]}\r\n                                            </div>\r\n                                                <div className={ \"iconePrioridadeTicket \" + priorityStyleDict[ticketInfo.priority]}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"ticketDescription\">\r\n                                        <div className=\"legendaDescription\">\r\n                                            Descrição\r\n                                        </div>\r\n                                        <div className=\"boxDescription\">\r\n                                            <div dangerouslySetInnerHTML={{ __html: ticketInfo.description }} />\r\n                                        </div>  \r\n                                    </div>\r\n                                    <div className=\"tiketTimeLeft\">\r\n                                        Prazo para primeira resposta vence em 5 horas.\r\n                                    </div>\r\n                                    <div className=\"tiketMoreInfos\">\r\n                                        <Ticketparam title={\"Tipo\"} name={ticketInfo.type}/>\r\n\r\n                                        <Ticketparam title={\"Usuario\"} name={ticketInfo.cf_usurio331473}/>\r\n                                        <Ticketparam title={\"Tipo do ticket\"} name={ticketInfo.cf_tipo_do_ticket264377}/>\r\n                                        <Ticketparam title={\"Reclame aqui id\"} name={ticketInfo.cf_reclame_aqui_id}/>\r\n                                        <Ticketparam title={\"Source external id\"} name={ticketInfo.cf_source_external_id}/>\r\n                                        <Ticketparam title={\"Empresa recebendo reclamação\"} name={ticketInfo.cf_empresa_recebendo_a_reclamao}/>\r\n                                        <Ticketparam title={\"Cliente voltou a fazer negocio\"} name={ticketInfo.cf_cliente_voltou_a_fazer_negocio}/>\r\n                                        <Ticketparam title={\"Ticket congelado mais de 30 dias sem resposta\"} name={ticketInfo.cf_ticket_congelado_mais_de_30_dias_sem_resposta}/>\r\n\r\n                                        <Ticketparam title={\"Status\"} name={statusDict[ticketInfo.status]}/>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                    <div className=\"buttonsActions\">\r\n                                        <button className=\"buttonExcluirTicket\" onClick={()=>excluirTicket()}>Excluir</button>\r\n                                        <Link to={\"/edit/\"+ticketInfo.id} className=\"linkRoute\">\r\n                                            <button className=\"buttonEditarTicket\">Editar</button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\ticketparam.js",["93"],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Viewticket\\Ticketparam.js",["94","95"],"import './styles.css';\r\n\r\nexport default function Ticketparam(props) {\r\n    return (\r\n\r\n        props.name == null?\r\n            <></>\r\n        :\r\n            <div className=\"paramTicket\">\r\n                <div className=\"nameField\">\r\n                    {props.title}\r\n                </div>\r\n                <div className=\"dataParam\">\r\n                    {\r\n                        props.name == false?\r\n                            \"Não\"\r\n                        :\r\n                        props.name == true?\r\n                            \"Sim\"\r\n                        :\r\n                        props.name\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n    );\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\pages\\Changeticket\\index.js",["96","97","98","99","100","101","102","103","104","105","106"],"import React , { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useParams } from 'react-router-dom';\r\n\r\nimport  draftToHtml  from 'draftjs-to-html';\r\nimport Form from '../../components/Form';\r\nimport Contextmenu from '../../components/Contextmenu';\r\nimport Topbar from '../../components/Topbar';\r\n\r\nimport './styles.css'\r\n\r\n\r\n// informações obtidas em https://loupendemo.freshdesk.com/api/_/bootstrap/agents_group\r\n\r\nimport api from '../../services/api';\r\n\r\n\r\nexport default function Changeticket(){\r\n    const history = useHistory();\r\n    // id do ticket a ser alterado\r\n    const { id } = useParams('id')\r\n\r\n    // dados de acesso à API\r\n    let authLogin = localStorage.getItem('authLogin');\r\n    let authPass = localStorage.getItem('authPass');\r\n\r\n    // dados do ticket \r\n    const [ticket, setticket] = useState(null);\r\n\r\n\r\n    // campos para o editor de descrição\r\n    const [contentState, setcontentState] = useState(\"\");\r\n\r\n    let numberFields = [\"priority\", \"requester_id\", \"responder_id\", \"group_id\", \"status\"];\r\n    let unusedFields = [\"updated_at\", \"created_at\", \"responder_id\", \"description\", \"description_text\", \"id\"];\r\n\r\n    // atualiza a variavel ticket com os dadosinseridos no form\r\n    const changeTicket = (event) => {\r\n        let value = event.target.value;\r\n        let fieldName = event.target.name;\r\n\r\n        if(event.target.type == \"number\" || numberFields.includes(fieldName))\r\n            value = parseInt(value);\r\n        else if(event.target.type == \"checkbox\"){\r\n            if(ticket[fieldName] == null)\r\n                value = true\r\n            else\r\n                value = null\r\n        }\r\n        if(fieldName.split('_')[0] == 'cf'){\r\n            setticket((prevState) => ({\r\n                ...prevState,\r\n                \"custom_fields\": {\r\n                    ...prevState[\"custom_fields\"],\r\n                    [fieldName]: value\r\n                }\r\n            }));\r\n        }\r\n        else{\r\n            setticket((prevState) => ({\r\n                ...prevState,\r\n                [fieldName]: value\r\n            }));\r\n        } \r\n    }\r\n\r\n    // carrega os dados atuais do ticket\r\n    useEffect(()=>{\r\n        if(ticket == null){\r\n            console.log(id)\r\n            api.get(\"tickets/\"+id, {\r\n                \"auth\": {\r\n                    \"username\" : authLogin,\r\n                    \"password\" : authPass\r\n                }\r\n            }).then(async response => {\r\n                setticket(response.data)             \r\n            });\r\n        }\r\n    });\r\n\r\n    \r\n    // salva o ticket com os dados alterados no form\r\n    async function saveTicket(){\r\n        let cleanTicket = ticket;\r\n        // checa os campos e romove os campos vazios\r\n        for(let field in cleanTicket){\r\n            if(cleanTicket[field] == null || cleanTicket[field] == undefined || cleanTicket[field] == \"\" || unusedFields.includes(field))\r\n                delete cleanTicket[field]\r\n            else if(field == 'custom_fields')\r\n                for(let sub_field in cleanTicket[field]){\r\n                    if(cleanTicket[field][sub_field] == null || cleanTicket[field][sub_field] == undefined || cleanTicket[field][sub_field] == \"\")\r\n                        delete cleanTicket[field][sub_field]\r\n                }\r\n        }\r\n\r\n        setticket(cleanTicket);\r\n        \r\n        try {\r\n            await api.put('tickets/'+id, ticket, {\r\n                auth: {\r\n                    username: authLogin,\r\n                    password: authPass\r\n                }\r\n            })\r\n        } catch (err) {\r\n            alert('Erro ao cadastrar caso, tente novamente.');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Contextmenu/>\r\n            <div className=\"contentContainerMain\">\r\n                <Topbar/>\r\n                <div className=\"formContent\">\r\n                    <div className=\"tituloNewticket\">\r\n                        Alterar Ticket\r\n                    </div>\r\n                    {\r\n                        ticket == null?\r\n                            <></>\r\n                        :\r\n                            <Form \r\n                                ticket = {ticket} \r\n                                changeTicket = {changeTicket} \r\n                                contentState= {contentState} \r\n                                setcontentState = {setcontentState}\r\n                                saveTicket = {saveTicket}\r\n                                isUpdate = {true}\r\n                            />\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Form.js",[],"C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Contextmenu.js",["107"],"import '../pages/Main/styles.css';\r\nimport iconeLoupen from '../assets/images/icone-Loupen.png';\r\nimport { Link , useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Contextmenu = ()=>{\r\n    const history = useHistory();\r\n\r\n    function handleLogout(){\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input id=\"menu-hamburguer\" type=\"checkbox\" className=\"inputHamburguer\"/>\r\n            <label for=\"menu-hamburguer\">\r\n                <div className=\"menu\">\r\n                    <span className=\"hamburguer\"></span>\r\n                </div>\r\n            </label>\r\n            <div className=\"contextMenu\">\r\n                <div className=\"conatinerContext\">\r\n                    <div className=\"topBarContext\">\r\n                        <div className=\"topBarContainer\">\r\n                            <img src={ iconeLoupen } alt=\"userImage\" className=\"imageIconContext\"/>\r\n                            <div className=\"textUserName\">\r\n                                NomeUsuario\r\n                            </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=> history.push('/home')}>\r\n                        Listar Tickets\r\n                    </div>\r\n                    <div className=\"contextOption\" onClick={()=> history.push('/new')}>\r\n                        Novo Ticket\r\n                    </div>\r\n                    <div className=\"contextOptionExit\" onClick={handleLogout}>\r\n                        Sair\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"\">\r\n                    <div>\r\n\r\n                    </div>\r\n                </label>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contextmenu; ","C:\\Users\\mathe\\Documents\\Projetos\\teste-loupen\\src\\components\\Topbar.js",["108"],"import '../pages/Main/styles.css';\r\nimport iconeFreshdesk from '../assets/images/logo-Freshdesk.png';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst Topbar = () =>{\r\n    return(\r\n        <div className=\"topBarContent\">\r\n            <img src={iconeFreshdesk} alt=\"FreshdeskTaskManager\" className=\"logoFrashdeskTopBar\"/>\r\n            <div className=\"formContainerInput\">\r\n                <form action=\"\">\r\n                    <input type=\"search\" placeholder=\"Buscar Ticket\" className=\"inputSearchTopBar\"/>  \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topbar;",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"117","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":22,"column":19,"nodeType":"115","messageId":"116","endLine":22,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":25,"column":40,"nodeType":"121","messageId":"122","endLine":25,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":42,"column":30,"nodeType":"121","messageId":"122","endLine":42,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":139,"column":47,"nodeType":"121","messageId":"122","endLine":139,"endColumn":49},{"ruleId":"113","severity":1,"message":"114","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"123","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":11},{"ruleId":"113","severity":1,"message":"124","line":15,"column":9,"nodeType":"115","messageId":"116","endLine":15,"endColumn":18},{"ruleId":"113","severity":1,"message":"125","line":16,"column":9,"nodeType":"115","messageId":"116","endLine":16,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":63,"column":30,"nodeType":"121","messageId":"122","endLine":63,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":65,"column":35,"nodeType":"121","messageId":"122","endLine":65,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":71,"column":36,"nodeType":"121","messageId":"122","endLine":71,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":94,"column":13,"nodeType":"128","messageId":"129","endLine":94,"endColumn":55,"fix":"130"},{"ruleId":"126","severity":1,"message":"131","line":95,"column":13,"nodeType":"128","messageId":"129","endLine":95,"endColumn":43,"fix":"132"},{"ruleId":"119","severity":1,"message":"120","line":103,"column":65,"nodeType":"121","messageId":"122","endLine":103,"endColumn":67},{"ruleId":"119","severity":1,"message":"120","line":103,"column":100,"nodeType":"121","messageId":"122","endLine":103,"endColumn":102},{"ruleId":"119","severity":1,"message":"120","line":105,"column":27,"nodeType":"121","messageId":"122","endLine":105,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":107,"column":95,"nodeType":"121","messageId":"122","endLine":107,"endColumn":97},{"ruleId":"119","severity":1,"message":"120","line":107,"column":141,"nodeType":"121","messageId":"122","endLine":107,"endColumn":143},{"ruleId":"113","severity":1,"message":"133","line":15,"column":11,"nodeType":"115","messageId":"116","endLine":15,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":15,"column":36,"nodeType":"121","messageId":"122","endLine":15,"endColumn":38},{"ruleId":"119","severity":1,"message":"120","line":18,"column":36,"nodeType":"121","messageId":"122","endLine":18,"endColumn":38},{"ruleId":"113","severity":1,"message":"117","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"135","line":4,"column":9,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"113","severity":1,"message":"133","line":18,"column":11,"nodeType":"115","messageId":"116","endLine":18,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":41,"column":30,"nodeType":"121","messageId":"122","endLine":41,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":43,"column":35,"nodeType":"121","messageId":"122","endLine":43,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":49,"column":36,"nodeType":"121","messageId":"122","endLine":49,"endColumn":38},{"ruleId":"119","severity":1,"message":"120","line":87,"column":65,"nodeType":"121","messageId":"122","endLine":87,"endColumn":67},{"ruleId":"119","severity":1,"message":"120","line":87,"column":100,"nodeType":"121","messageId":"122","endLine":87,"endColumn":102},{"ruleId":"119","severity":1,"message":"120","line":89,"column":27,"nodeType":"121","messageId":"122","endLine":89,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":91,"column":95,"nodeType":"121","messageId":"122","endLine":91,"endColumn":97},{"ruleId":"119","severity":1,"message":"120","line":91,"column":141,"nodeType":"121","messageId":"122","endLine":91,"endColumn":143},{"ruleId":"113","severity":1,"message":"117","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"136","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'resultLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'api' is defined but never used.","'authLogin' is assigned a value but never used.","'authPass' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"description\"] found.","Property","unnecessarilyComputedProperty",{"range":"139","text":"140"},"Unnecessarily computed property [\"macarrao\"] found.",{"range":"141","text":"142"},"'history' is assigned a value but never used.","'ticketparam' is defined but never used.","'draftToHtml' is defined but never used.","'AddBoxIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[3297,3312],"\"description\"",[3354,3366],"\"macarrao\""]